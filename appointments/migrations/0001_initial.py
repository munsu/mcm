# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-19 01:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_confirm_status', models.CharField(choices=[('confirmed', 'Confirmed'), ('unconfirmed', 'Unconfirmed')], default='unconfirmed', max_length=64)),
                ('appointment_confirm_date', models.DateTimeField(blank=True, null=True)),
                ('appointment_facility', models.CharField(max_length=255)),
                ('appointment_number', models.CharField(max_length=64)),
                ('appointment_provider', models.CharField(max_length=255)),
                ('appointment_scheduled_service', models.CharField(max_length=255)),
                ('appointment_status', models.CharField(max_length=64)),
                ('appointment_date', models.DateTimeField()),
                ('appointment_scheduled_dt', models.DateTimeField()),
                ('appointment_type', models.CharField(blank=True, max_length=64, null=True)),
                ('appointment_class', models.CharField(blank=True, max_length=64, null=True)),
                ('procedure_description', models.CharField(max_length=255)),
                ('scheduled_room', models.CharField(max_length=64)),
                ('scheduled_duration', models.CharField(max_length=64)),
                ('provider_id', models.CharField(blank=True, max_length=64, null=True)),
                ('provider_npi_id', models.CharField(blank=True, max_length=64, null=True)),
                ('provider_specialty', models.CharField(blank=True, max_length=64, null=True)),
                ('patient_type', models.CharField(choices=[('inpatient', 'Inpatient'), ('outpatient', 'Outpatient')], max_length=64)),
                ('asa_rating', models.CharField(blank=True, max_length=64, null=True)),
                ('asa_cd', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Client')),
            ],
            options={
                'verbose_name_plural': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twilio_status', models.CharField(blank=True, choices=[('queued', 'Queued'), ('failed', 'Failed'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('undelivered', 'Undelivered')], max_length=64, null=True)),
                ('twilio_error', models.CharField(blank=True, choices=[('30001', 'Queue overflow'), ('30002', 'Account suspended'), ('30003', 'Unreachable destination'), ('30004', 'Message blocked'), ('30005', 'Unknown destination handset'), ('30006', 'Landline or unreachable carrier'), ('30007', 'Carrier violation'), ('30008', 'Unknown error'), ('30009', 'Missing segment'), ('30010', 'Message price exceeds max price')], max_length=64, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Appointment')),
            ],
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('message_type', models.CharField(choices=[('email', 'Email Message'), ('text', 'Text Message'), ('call', 'Phone Call')], max_length=255)),
                ('content', models.CharField(max_length=255)),
                ('timedelta', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=64)),
                ('patient_first_name', models.CharField(max_length=255)),
                ('patient_last_name', models.CharField(max_length=255)),
                ('patient_mrn', models.CharField(blank=True, max_length=64, null=True)),
                ('patient_home_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('patient_mobile_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('patient_email_address', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('rule', models.CharField(max_length=255)),
                ('clients', models.ManyToManyField(to='appointments.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Message')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.Client')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='messagetemplate',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Protocol'),
        ),
        migrations.AddField(
            model_name='message',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Patient'),
        ),
        migrations.AddField(
            model_name='message',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.MessageTemplate'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Client'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.Patient'),
        ),
    ]
